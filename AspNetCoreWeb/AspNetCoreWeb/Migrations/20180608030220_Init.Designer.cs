// <auto-generated />
using System;
using AspNetCoreWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AspNetCoreWeb.Migrations
{
    [DbContext(typeof(FonourDbContext))]
    [Migration("20180608030220_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", "'uuid-ossp', '', ''")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AspNetCoreWeb.Models.DepartmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Manager");

                    b.Property<string>("Name");

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.MenuModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Icon");

                    b.Property<string>("Name");

                    b.Property<Guid>("ParentId");

                    b.Property<string>("Remarks");

                    b.Property<Guid?>("RoleModelId");

                    b.Property<int>("SerialNumber");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("RoleModelId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.RoleMenuModel", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("MenuId");

                    b.Property<Guid?>("MenuId1");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuId1");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.RoleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Name");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("DeptmentId");

                    b.Property<string>("EMail");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<int>("LoginTimes");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Remarks");

                    b.Property<Guid>("RoleId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DeptmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.UserRoleModel", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.DepartmentModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.UserModel", "CreateUser")
                        .WithOne("Department")
                        .HasForeignKey("AspNetCoreWeb.Models.DepartmentModel", "CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.MenuModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.RoleModel")
                        .WithMany("Menus")
                        .HasForeignKey("RoleModelId");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.RoleMenuModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.RoleModel", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWeb.Models.MenuModel", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId1");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.RoleModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.UserModel", "CreateUser")
                        .WithMany("Roles")
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.UserModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.UserModel", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWeb.Models.DepartmentModel", "DepartmentModel")
                        .WithMany("Users")
                        .HasForeignKey("DeptmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWeb.Models.RoleModel", "RoleModel")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.UserRoleModel", b =>
                {
                    b.HasOne("AspNetCoreWeb.Models.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWeb.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
